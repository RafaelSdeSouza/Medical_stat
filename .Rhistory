thresholds="best",
print.thres="best")
classif_rf
warnings()
options(java.parameters = "-Xmx4g")
library(extraTrees)
install.packages("extraTrees")
options(java.parameters = "-Xmx4g")
library(extraTrees)
install.packages("rJava")
options(java.parameters = "-Xmx4g")
library(extraTrees)
install.packages("rJava",type="source")
library(xgboost)
xgb_fit = train(PREGNANT_NUMERIC~
AGE+
TL_rand +
TLD_rand + TLP_rand  + ANAS_rand + Fibr_rand + Diam_rand,
data = Train,
method = "xgbTree",
verbose = FALSE,
tuneLength = 10)
require(quantregForest)
Train
qrf <- quantregForest(x=Train[,-1], y=Train[,1], nodesize=10,sampsize=30)
qrf
p_rf(qrf,newdata = Test[,-1])
predict(qrf)
qrf <- quantregForest(x=Train[,-1], y=Train[,1], nodesize=10,keep.inbag=TRUE )
predict(qrf)
Train[,1]
classif_rf <-  randomForest(PREGNANT_NUMERIC~
#LIGATION_GROUP+
AGE+
TL_rand +
TLD_rand + TLP_rand  + ANAS_rand + Fibr_rand + Diam_rand,
data = Train,mtry=7, ntree=5000,keep.inbag=TRUE)
classif_rf
classif_rf <-  randomForest(PREGNANT_NUMERIC~
#LIGATION_GROUP+
AGE+
TL_rand +
#                              TLD_rand + TLP_rand  +
ANAS_rand + Fibr_rand + Diam_rand,
data = Train,mtry=3, ntree=5000,keep.inbag=TRUE)
classif_rf
randomForest(PREGNANT_NUMERIC~
#LIGATION_GROUP+
AGE+
TL_rand +
#                              TLD_rand + TLP_rand  +
ANAS_rand + Fibr_rand + Diam_rand,
data = Train, ntree=500,keep.inbag=TRUE)
randomForest(PREGNANT_NUMERIC~
#LIGATION_GROUP+
AGE+
TL_rand +
#                              TLD_rand +
TLP_rand  +
ANAS_rand + Fibr_rand + Diam_rand,
data = Train, ntree=500,keep.inbag=TRUE)
p_rf <- function(object, newdata){predict(object, newdata=newdata, type="prob")[,2]}
p_glm  <- function(object, newdata){predict(object, newdata=newdata, type="response")}
yTest <- as.numeric(as.character(Test$PREGNANT_NUMERIC))
explain_glm  <- explain(classif_glm, label = "GLM",
data = Test[,-1], y = yTest,
predict_function = p_glm)
explain_rf <- explain(classif_rf, label = "RF",
data = Test[,-1], y = yTest,
predict_function = p_rf)
# Model Performance
# AUC
pred_glm <- p_glm(classif_glm,newdata = Test[,-1])
pred_rf <- p_rf(qrf,newdata = Test[,-1])
# F-1 Score
F1_Score(y_pred = pred_rf, y_true = yTest, positive = "1")
F1_Score(y_pred = pred_glm, y_true = yTest)
#plot(roc( yTest, pred_glm, direction="<"),print.auc=TRUE,
#     lwd=3)
#plot(roc(yTest, pred_rf, direction="<"),print.auc=TRUE,
#     lwd=3)
plot.roc(yTest,pred_glm,
percent=TRUE,  ci=TRUE, print.auc=TRUE,
thresholds="best",
print.thres="best")
plot.roc( yTest,pred_rf,
percent=TRUE,  ci=TRUE, print.auc=TRUE,
thresholds="best",
print.thres="best")
pred_rf <- p_rf(explain_rf ,newdata = Test[,-1])
# F-1 Score
F1_Score(y_pred = pred_rf, y_true = yTest, positive = "1")
F1_Score(y_pred = pred_glm, y_true = yTest)
#plot(roc( yTest, pred_glm, direction="<"),print.auc=TRUE,
#     lwd=3)
#plot(roc(yTest, pred_rf, direction="<"),print.auc=TRUE,
#     lwd=3)
plot.roc(yTest,pred_glm,
percent=TRUE,  ci=TRUE, print.auc=TRUE,
thresholds="best",
print.thres="best")
plot.roc( yTest,pred_rf,
percent=TRUE,  ci=TRUE, print.auc=TRUE,
thresholds="best",
print.thres="best")
explain_rf
p_rf(explain_rf ,newdata = Test[,-1])
explain_rf <- explain(classif_rf, label = "RF",
data = Test[,-1], y = yTest,
predict_function = p_rf)
pred_rf <- p_rf(explain_rf ,newdata = Test[,-1])
classif_rf <-  randomForest(PREGNANT_NUMERIC~
#LIGATION_GROUP+
AGE+
TL_rand +
#                              TLD_rand +
TLP_rand  +
ANAS_rand + Fibr_rand + Diam_rand,
data = Train, ntree=500,keep.inbag=TRUE)
p_rf <- function(object, newdata){predict(object, newdata=newdata, type="prob")[,2]}
p_glm  <- function(object, newdata){predict(object, newdata=newdata, type="response")}
yTest <- as.numeric(as.character(Test$PREGNANT_NUMERIC))
explain_glm  <- explain(classif_glm, label = "GLM",
data = Test[,-1], y = yTest,
predict_function = p_glm)
explain_rf <- explain(classif_rf, label = "RF",
data = Test[,-1], y = yTest,
predict_function = p_rf)
pred_glm <- p_glm(classif_glm,newdata = Test[,-1])
pred_rf <- p_rf(explain_rf ,newdata = Test[,-1])
# F-1 Score
F1_Score(y_pred = pred_rf, y_true = yTest, positive = "1")
F1_Score(y_pred = pred_glm, y_true = yTest)
#plot(roc( yTest, pred_glm, direction="<"),print.auc=TRUE,
#     lwd=3)
#plot(roc(yTest, pred_rf, direction="<"),print.auc=TRUE,
#     lwd=3)
plot.roc(yTest,pred_glm,
percent=TRUE,  ci=TRUE, print.auc=TRUE,
thresholds="best",
print.thres="best")
plot.roc( yTest,pred_rf,
percent=TRUE,  ci=TRUE, print.auc=TRUE,
thresholds="best",
print.thres="best")
classif_rf <-  randomForest(PREGNANT_NUMERIC~
#LIGATION_GROUP+
AGE+
TL_rand +
#                              TLD_rand +
TLP_rand  +
ANAS_rand + Fibr_rand + Diam_rand,
data = Train, ntree=500)
p_rf <- function(object, newdata){predict(object, newdata=newdata, type="prob")[,2]}
p_glm  <- function(object, newdata){predict(object, newdata=newdata, type="response")}
yTest <- as.numeric(as.character(Test$PREGNANT_NUMERIC))
explain_glm  <- explain(classif_glm, label = "GLM",
data = Test[,-1], y = yTest,
predict_function = p_glm)
explain_rf <- explain(classif_rf, label = "RF",
data = Test[,-1], y = yTest,
predict_function = p_rf)
mp_glm <- model_performance(explain_glm) %>% as.data.frame()
mp_rf <- model_performance(explain_rf) %>% as.data.frame()
mp_all <- rbind(mp_glm,mp_rf)
ggplot(mp_all,aes(x=label,y=abs(diff),group=label,
fill=label)) +
geom_boxplot() +
my_style() +
coord_flip()+
scale_color_fivethirtyeight() + ylab("ECDF") +
scale_fill_fivethirtyeight() +
xlab("|Residuals|")
classif_rf <-  randomForest(PREGNANT_NUMERIC~
#LIGATION_GROUP+
AGE+
TL_rand +
#                              TLD_rand +
TLP_rand  +
ANAS_rand + Fibr_rand + Diam_rand,
data = Train, ntree=5000)
p_rf <- function(object, newdata){predict(object, newdata=newdata, type="prob")[,2]}
p_glm  <- function(object, newdata){predict(object, newdata=newdata, type="response")}
yTest <- as.numeric(as.character(Test$PREGNANT_NUMERIC))
explain_glm  <- explain(classif_glm, label = "GLM",
data = Test[,-1], y = yTest,
predict_function = p_glm)
explain_rf <- explain(classif_rf, label = "RF",
data = Test[,-1], y = yTest,
predict_function = p_rf)
mp_glm <- model_performance(explain_glm) %>% as.data.frame()
mp_rf <- model_performance(explain_rf) %>% as.data.frame()
mp_all <- rbind(mp_glm,mp_rf)
ggplot(mp_all,aes(x=label,y=abs(diff),group=label,
fill=label)) +
geom_boxplot() +
my_style() +
coord_flip()+
scale_color_fivethirtyeight() + ylab("ECDF") +
scale_fill_fivethirtyeight() +
xlab("|Residuals|")
pred_glm <- p_glm(classif_glm,newdata = Test[,-1])
pred_rf <- p_rf(explain_rf ,newdata = Test[,-1])
# F-1 Score
F1_Score(y_pred = pred_rf, y_true = yTest, positive = "1")
F1_Score(y_pred = pred_glm, y_true = yTest)
#plot(roc( yTest, pred_glm, direction="<"),print.auc=TRUE,
#     lwd=3)
#plot(roc(yTest, pred_rf, direction="<"),print.auc=TRUE,
#     lwd=3)
plot.roc(yTest,pred_glm,
percent=TRUE,  ci=TRUE, print.auc=TRUE,
thresholds="best",
print.thres="best")
plot.roc( yTest,pred_rf,
percent=TRUE,  ci=TRUE, print.auc=TRUE,
thresholds="best",
print.thres="best")
classif_rf <-  randomForest(PREGNANT_NUMERIC~
#LIGATION_GROUP+
AGE+
TL_rand +
#                              TLD_rand +
TLP_rand  +
ANAS_rand + Fibr_rand + Diam_rand,
data = Train, ntree=5000,nodesize=50)
classif_rf
randomForest(PREGNANT_NUMERIC~
#LIGATION_GROUP+
AGE+
TL_rand +
#                              TLD_rand +
TLP_rand  +
ANAS_rand + Fibr_rand + Diam_rand,
data = Train, ntree=1000,nodesize=100)
randomForest(PREGNANT_NUMERIC~
#LIGATION_GROUP+
AGE+
TL_rand +
#                              TLD_rand +
TLP_rand  +
ANAS_rand + Fibr_rand + Diam_rand,
data = Train, ntree=1000,nodesize=200)
randomForest(PREGNANT_NUMERIC~
#LIGATION_GROUP+
AGE+
TL_rand +
#                              TLD_rand +
TLP_rand  +
ANAS_rand + Fibr_rand + Diam_rand,
data = Train, ntree=2000,nodesize=100)
varImpPlot(classif_rf)
classif_rf <-  randomForest(PREGNANT_NUMERIC~
#LIGATION_GROUP+
AGE+
TL_rand +
#                              TLD_rand +
TLP_rand  +
ANAS_rand + Fibr_rand,
#+ Diam_rand,
data = Train, ntree=2000,nodesize=100)
pred_glm <- p_glm(classif_glm,newdata = Test[,-1])
pred_rf <- p_rf(explain_rf ,newdata = Test[,-1])
# F-1 Score
F1_Score(y_pred = pred_rf, y_true = yTest, positive = "1")
F1_Score(y_pred = pred_glm, y_true = yTest)
#plot(roc( yTest, pred_glm, direction="<"),print.auc=TRUE,
#     lwd=3)
#plot(roc(yTest, pred_rf, direction="<"),print.auc=TRUE,
#     lwd=3)
plot.roc(yTest,pred_glm,
percent=TRUE,  ci=TRUE, print.auc=TRUE,
thresholds="best",
print.thres="best")
plot.roc( yTest,pred_rf,
percent=TRUE,  ci=TRUE, print.auc=TRUE,
thresholds="best",
print.thres="best")
explain(classif_rf, label = "RF",
data = Test[,-1], y = yTest,
predict_function = p_rf)
explain_rf <- explain(classif_rf, label = "RF",
data = Test[,-1], y = yTest,
predict_function = p_rf)
p_rf <- function(object, newdata){predict(object, newdata=newdata, type="prob")[,2]}
p_glm  <- function(object, newdata){predict(object, newdata=newdata, type="response")}
yTest <- as.numeric(as.character(Test$PREGNANT_NUMERIC))
explain_glm  <- explain(classif_glm, label = "GLM",
data = Test[,-1], y = yTest,
predict_function = p_glm)
explain_rf <- explain(classif_rf, label = "RF",
data = Test[,-1], y = yTest,
predict_function = p_rf)
p_rf(explain_rf ,newdata = Test[,-1])
pred_rf <- p_rf(eclassif_rf ,newdata = Test[,-1])
# F-1 Score
F1_Score(y_pred = pred_rf, y_true = yTest, positive = "1")
F1_Score(y_pred = pred_glm, y_true = yTest)
#plot(roc( yTest, pred_glm, direction="<"),print.auc=TRUE,
#     lwd=3)
#plot(roc(yTest, pred_rf, direction="<"),print.auc=TRUE,
#     lwd=3)
plot.roc(yTest,pred_glm,
percent=TRUE,  ci=TRUE, print.auc=TRUE,
thresholds="best",
print.thres="best")
plot.roc( yTest,pred_rf,
percent=TRUE,  ci=TRUE, print.auc=TRUE,
thresholds="best",
print.thres="best")
pred_rf <- p_rf(classif_rf ,newdata = Test[,-1])
# F-1 Score
F1_Score(y_pred = pred_rf, y_true = yTest, positive = "1")
F1_Score(y_pred = pred_glm, y_true = yTest)
#plot(roc( yTest, pred_glm, direction="<"),print.auc=TRUE,
#     lwd=3)
#plot(roc(yTest, pred_rf, direction="<"),print.auc=TRUE,
#     lwd=3)
plot.roc(yTest,pred_glm,
percent=TRUE,  ci=TRUE, print.auc=TRUE,
thresholds="best",
print.thres="best")
plot.roc( yTest,pred_rf,
percent=TRUE,  ci=TRUE, print.auc=TRUE,
thresholds="best",
print.thres="best")
classif_rf <-  randomForest(PREGNANT_NUMERIC~
#LIGATION_GROUP+
AGE+
TL_rand +
#                              TLD_rand +
TLP_rand  +
ANAS_rand + Fibr_rand + Diam_rand,
data = Train, ntree=2000,nodesize=100)
pred_rf <- p_rf(classif_rf ,newdata = Test[,-1])
# F-1 Score
F1_Score(y_pred = pred_rf, y_true = yTest, positive = "1")
F1_Score(y_pred = pred_glm, y_true = yTest)
#plot(roc( yTest, pred_glm, direction="<"),print.auc=TRUE,
#     lwd=3)
#plot(roc(yTest, pred_rf, direction="<"),print.auc=TRUE,
#     lwd=3)
plot.roc(yTest,pred_glm,
percent=TRUE,  ci=TRUE, print.auc=TRUE,
thresholds="best",
print.thres="best")
plot.roc( yTest,pred_rf,
percent=TRUE,  ci=TRUE, print.auc=TRUE,
thresholds="best",
print.thres="best")
mp_glm <- model_performance(explain_glm) %>% as.data.frame()
mp_rf <- model_performance(explain_rf) %>% as.data.frame()
mp_all <- rbind(mp_glm,mp_rf)
ggplot(mp_all,aes(x=label,y=abs(diff),group=label,
fill=label)) +
geom_boxplot() +
my_style() +
coord_flip()+
scale_color_fivethirtyeight() + ylab("ECDF") +
scale_fill_fivethirtyeight() +
xlab("|Residuals|")
classif_glm <- glm(PREGNANT_NUMERIC~
#LIGATION_GROUP
AGE+TL_rand + TLD_rand +
TLP_rand  + ANAS_rand + Fibr_rand + Diam_rand, data = Train,
family=binomial(link = "logit"))
classif_rf <-  randomForest(PREGNANT_NUMERIC~
#LIGATION_GROUP+
AGE+
TL_rand +
#                              TLD_rand +
TLP_rand  +
ANAS_rand + Fibr_rand + Diam_rand,
data = Train, ntree=2000,nodesize=100)
p_rf <- function(object, newdata){predict(object, newdata=newdata, type="prob")[,2]}
p_glm  <- function(object, newdata){predict(object, newdata=newdata, type="response")}
yTest <- as.numeric(as.character(Test$PREGNANT_NUMERIC))
explain_glm  <- explain(classif_glm, label = "GLM",
data = Test[,-1], y = yTest,
predict_function = p_glm)
explain_rf <- explain(classif_rf, label = "RF",
data = Test[,-1], y = yTest,
predict_function = p_rf)
# Model Performance
# residuals
mp_glm <- model_performance(explain_glm) %>% as.data.frame()
mp_rf <- model_performance(explain_rf) %>% as.data.frame()
mp_all <- rbind(mp_glm,mp_rf)
ggplot(mp_all,aes(x=label,y=abs(diff),group=label,
fill=label)) +
geom_boxplot() +
my_style() +
coord_flip()+
scale_color_fivethirtyeight() + ylab("ECDF") +
scale_fill_fivethirtyeight() +
xlab("|Residuals|")
pred_glm <- p_glm(classif_glm,newdata = Test[,-1])
pred_rf <- p_rf(classif_rf ,newdata = Test[,-1])
# F-1 Score
F1_Score(y_pred = pred_rf, y_true = yTest, positive = "1")
F1_Score(y_pred = pred_glm, y_true = yTest)
#plot(roc( yTest, pred_glm, direction="<"),print.auc=TRUE,
#     lwd=3)
#plot(roc(yTest, pred_rf, direction="<"),print.auc=TRUE,
#     lwd=3)
plot.roc(yTest,pred_glm,
percent=TRUE,  ci=TRUE, print.auc=TRUE,
thresholds="best",
print.thres="best")
plot.roc( yTest,pred_rf,
percent=TRUE,  ci=TRUE, print.auc=TRUE,
thresholds="best",
print.thres="best")
classif_rf <-  randomForest(PREGNANT_NUMERIC~
#LIGATION_GROUP+
AGE+
TL_rand +
TLD_rand +
TLP_rand  +
ANAS_rand + Fibr_rand + Diam_rand,
data = Train, ntree=2000,nodesize=100)
p_rf <- function(object, newdata){predict(object, newdata=newdata, type="prob")[,2]}
p_glm  <- function(object, newdata){predict(object, newdata=newdata, type="response")}
yTest <- as.numeric(as.character(Test$PREGNANT_NUMERIC))
explain_glm  <- explain(classif_glm, label = "GLM",
data = Test[,-1], y = yTest,
predict_function = p_glm)
explain_rf <- explain(classif_rf, label = "RF",
data = Test[,-1], y = yTest,
predict_function = p_rf)
# residuals
mp_glm <- model_performance(explain_glm) %>% as.data.frame()
mp_rf <- model_performance(explain_rf) %>% as.data.frame()
mp_all <- rbind(mp_glm,mp_rf)
ggplot(mp_all,aes(x=label,y=abs(diff),group=label,
fill=label)) +
geom_boxplot() +
my_style() +
coord_flip()+
scale_color_fivethirtyeight() + ylab("ECDF") +
scale_fill_fivethirtyeight() +
xlab("|Residuals|")
pred_glm <- p_glm(classif_glm,newdata = Test[,-1])
pred_rf <- p_rf(classif_rf ,newdata = Test[,-1])
# F-1 Score
F1_Score(y_pred = pred_rf, y_true = yTest, positive = "1")
F1_Score(y_pred = pred_glm, y_true = yTest)
#plot(roc( yTest, pred_glm, direction="<"),print.auc=TRUE,
#     lwd=3)
#plot(roc(yTest, pred_rf, direction="<"),print.auc=TRUE,
#     lwd=3)
plot.roc(yTest,pred_glm,
percent=TRUE,  ci=TRUE, print.auc=TRUE,
thresholds="best",
print.thres="best")
plot.roc( yTest,pred_rf,
percent=TRUE,  ci=TRUE, print.auc=TRUE,
thresholds="best",
print.thres="best")
ale_glm_age  <- variable_response(explain_glm , variable =  "AGE", type = "pdp")
ale_rf_age   <- variable_response(explain_rf, variable =  "AGE", type = "pdp")
ale_age_all <- rbind(ale_glm_age,ale_rf_age)
ggplot(ale_rf_age,aes( x = x, y = y, group=label,color=label,linetype=label)) +
geom_smooth(method = 'loess',n = 500,show.legend=F) + geom_point() +  my_style() +
scale_color_fivethirtyeight() + ylab("Pregnancy likelihood") +
scale_fill_fivethirtyeight() +
xlab("AGE (yr)") + theme(legend.position = "none") +
coord_cartesian(xlim=c(21,50))
classif_rf <-  randomForest(PREGNANT_NUMERIC~
#LIGATION_GROUP+
AGE+
TL_rand +
TLD_rand +
TLP_rand  +
ANAS_rand + Fibr_rand + Diam_rand,
data = Train, ntree=2000,nodesize=50)
p_rf <- function(object, newdata){predict(object, newdata=newdata, type="prob")[,2]}
p_glm  <- function(object, newdata){predict(object, newdata=newdata, type="response")}
yTest <- as.numeric(as.character(Test$PREGNANT_NUMERIC))
explain_glm  <- explain(classif_glm, label = "GLM",
data = Test[,-1], y = yTest,
predict_function = p_glm)
explain_rf <- explain(classif_rf, label = "RF",
data = Test[,-1], y = yTest,
predict_function = p_rf)
pred_glm <- p_glm(classif_glm,newdata = Test[,-1])
pred_rf <- p_rf(classif_rf ,newdata = Test[,-1])
plot.roc(yTest,pred_glm,
percent=TRUE,  ci=TRUE, print.auc=TRUE,
thresholds="best",
print.thres="best")
plot.roc( yTest,pred_rf,
percent=TRUE,  ci=TRUE, print.auc=TRUE,
thresholds="best",
print.thres="best")
ggplot(mp_all,aes(x=label,y=abs(diff),group=label,
fill=label)) +
geom_boxplot() +
my_style() +
coord_flip()+
scale_color_fivethirtyeight() + ylab("ECDF") +
scale_fill_fivethirtyeight() +
xlab("|Residuals|")
ale_glm_age  <- variable_response(explain_glm , variable =  "AGE", type = "pdp")
ale_rf_age   <- variable_response(explain_rf, variable =  "AGE", type = "pdp")
ale_age_all <- rbind(ale_glm_age,ale_rf_age)
ggplot(ale_rf_age,aes( x = x, y = y, group=label,color=label,linetype=label)) +
geom_smooth(method = 'loess',n = 500,show.legend=F) + geom_point() +  my_style() +
scale_color_fivethirtyeight() + ylab("Pregnancy likelihood") +
scale_fill_fivethirtyeight() +
xlab("AGE (yr)") + theme(legend.position = "none") +
coord_cartesian(xlim=c(21,50))
