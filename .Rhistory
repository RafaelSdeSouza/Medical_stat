<<<<<<< HEAD
=======
legend.key = element_rect(colour = "white", fill = "white"))
ggplot(tubesum,aes(x=variable,y=value,group=variable,
fill=variable)) +
geom_boxplot(outlier.shape = NA) +
facet_wrap(.~LIGATION_GROUP,scales = "free") +
ylab("Lenght") + xlab("") +
theme(plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "white",
colour = "white",
size = 0.5, linetype = "solid"),
text=element_text(family="serif"),
strip.text = element_text(size=10),
strip.background = element_rect(fill = "white"),
axis.title = element_text(size=10),
axis.text  = element_text(size=10),
axis.ticks = element_line(size = 0.45),
axis.text.x = element_text(angle = 45,hjust = 1),
legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
legend.text = element_text(size=25),
legend.text.align = 0,
legend.key = element_rect(colour = "white", fill = "white"))
ggplot(tubesum,aes(x=variable,y=value,group=variable,
fill=variable)) +
geom_boxplot(outlier.shape = NA) +
facet_wrap(.~LIGATION_GROUP,scales = "free") +
ylab("Lenght") + xlab("") +
theme(plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "white",
colour = "white",
size = 0.5, linetype = "solid"),
text=element_text(family="serif"),
strip.text = element_text(size=10),
strip.background = element_rect(fill = "white"),
axis.title = element_text(size=10),
axis.text  = element_text(size=5),
axis.ticks = element_line(size = 0.45),
axis.text.x = element_text(angle = 45,hjust = 1),
legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
legend.text = element_text(size=25),
legend.text.align = 0,
legend.key = element_rect(colour = "white", fill = "white"))
ggplot(tubesum,aes(x=variable,y=value,group=variable,
fill=variable)) +
geom_boxplot(outlier.shape = NA) +
facet_wrap(.~LIGATION_GROUP) +
ylab("Lenght") + xlab("") +
theme(plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "white",
colour = "white",
size = 0.5, linetype = "solid"),
text=element_text(family="serif"),
strip.text = element_text(size=10),
strip.background = element_rect(fill = "white"),
axis.title = element_text(size=10),
axis.text  = element_text(size=5),
axis.ticks = element_line(size = 0.45),
axis.text.x = element_text(angle = 45,hjust = 1),
legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
legend.text = element_text(size=25),
legend.text.align = 0,
legend.key = element_rect(colour = "white", fill = "white"))
ggplot(tubesum,aes(x=variable,y=value,group=variable,
fill=variable)) +
>>>>>>> 8e4f02980a6738c372d7c86cb160540cb535eb68
geom_boxplot(outlier.shape = NA) +
facet_wrap(.~LIGATION_GROUP) +
ylab("Lenght") + xlab("") +
theme(plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "white",
colour = "white",
size = 0.5, linetype = "solid"),
text=element_text(family="serif"),
strip.text = element_text(size=10),
strip.background = element_rect(fill = "white"),
axis.title = element_text(size=10),
axis.text  = element_text(size=10),
axis.ticks = element_line(size = 0.45),
axis.text.x = element_text(angle = 45,hjust = 1),
legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
legend.text = element_text(size=25),
legend.text.align = 0,
legend.key = element_rect(colour = "white", fill = "white"))
ggplot(tubesum,aes(x=variable,y=value,group=variable,
fill=variable)) +
geom_boxplot(outlier.shape = NA) +
facet_wrap(.~LIGATION_GROUP) +
ylab("Lenght") + xlab("") +
theme(plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "white",
colour = "white",
size = 0.5, linetype = "solid"),
text=element_text(family="serif"),
strip.text = element_text(size=10),
strip.background = element_rect(fill = "white"),
axis.title = element_text(size=10),
axis.text  = element_text(size=7),
axis.ticks = element_line(size = 0.45),
axis.text.x = element_text(angle = 45,hjust = 1),
legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
legend.text = element_text(size=25),
legend.text.align = 0,
legend.key = element_rect(colour = "white", fill = "white"))
ggplot(tubesum,aes(x=variable,y=value,group=variable,
fill=variable)) +
geom_boxplot(outlier.shape = NA) +
facet_wrap(.~LIGATION_GROUP) +
ylab("Lenght") + xlab("") +
theme(plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "white",
colour = "white",
size = 0.5, linetype = "solid"),
text=element_text(family="serif"),
strip.text = element_text(size=10),
strip.background = element_rect(fill = "white"),
axis.title = element_text(size=10),
axis.text  = element_text(size=7),
axis.ticks = element_line(size = 0.45),
axis.text.x = element_text(angle = 45,hjust = 1),
legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
legend.text = element_text(size=25),
legend.text.align = 0,
legend.key = element_rect(colour = "white", fill = "white"))
ggplot(tubesum,aes(x=variable,y=value,group=variable,
fill=variable)) +
geom_boxplot(outlier.shape = NA) +
facet_wrap(.~LIGATION_GROUP) +
ylab("Lenght") + xlab("") +
theme(plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "white",
colour = "white",
size = 0.5, linetype = "solid"),
text=element_text(family="serif"),
strip.text = element_text(size=10),
strip.background = element_rect(fill = "white"),
axis.title = element_text(size=10),
axis.text  = element_text(size=7),
axis.ticks = element_line(size = 0.45),
axis.text.x = element_text(angle = 60,hjust = 1),
legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
legend.text = element_text(size=25),
legend.text.align = 0,
legend.key = element_rect(colour = "white", fill = "white"))
preg <- read.csv("BTA-Patients-MAW.csv")
colnames(preg)
preg$ANASTOMOSIS
preg$ANASTOMOSIS1_GROUP
preg$ANASTOMOSIS2_GROUP
preg$ANASTOMOSIS1_NUMERIC
preg$L_DIAMETERS
preg$DIAMETER_TOTAL_NUMERIC
preg$R_DIAMETER_NUMERIC
preg <- read.csv("BTA-Patients-MAW.csv") %>% select(c("BECOME_PREGNANT","TUBELENGTH_R_DISTAL","PREGNANT_NUMERIC",
"TUBELENGTH_L_DISTAL","LIGATION_GROUP",
"AGE","RIGHT_TUBE_LENGTH","LEFT_TUBE_LENGTH",
"TUBELENGTH_R_PROX",
"TUBELENGTH_L_PROX","AV_TUBELENGTH_GP",
"R_DIAMETER_NUMERIC",
"L_DIAMETER_NUMERIC",
"R_FIBROSIS_NUMERIC",
"L_FIBROSIS_NUMERIC")) %>%
filter(AGE != "Yes") %>%  mutate(AGE = as.numeric(as.character(AGE)) )  %>%
filter(AGE > 10) %>%
na.omit() %>% mutate(LEFT_TUBE_LENGTH = as.numeric(as.character(LEFT_TUBE_LENGTH)) ) %>%
mutate(PCA_TUBE_LENGTH = -prcomp(data.frame(RIGHT_TUBE_LENGTH,LEFT_TUBE_LENGTH))$x[,1]) %>%
#  mutate(assymetry = (RIGHT_TUBE_LENGTH + LEFT_TUBE_LENGTH)/apply(data.frame(RIGHT_TUBE_LENGTH,LEFT_TUBE_LENGTH), 1, max)) %>%
mutate(assymetry = (RIGHT_TUBE_LENGTH + LEFT_TUBE_LENGTH)) %>%
filter(BECOME_PREGNANT %in% c("Yes","No")) %>% droplevels()
tubesum <- preg %>%  select(c("LIGATION_GROUP","TUBELENGTH_R_DISTAL",
"TUBELENGTH_L_DISTAL",
"RIGHT_TUBE_LENGTH","LEFT_TUBE_LENGTH",
"TUBELENGTH_R_PROX","TUBELENGTH_L_PROX",
"R_DIAMETER_NUMERIC",
"L_DIAMETER_NUMERIC",
"R_FIBROSIS_NUMERIC",
"L_FIBROSIS_NUMERIC"
)) %>%
melt(.,id.vars="LIGATION_GROUP") %>%
mutate(value=as.numeric(value))
ggplot(tubesum,aes(x=variable,y=value,group=variable,
fill=variable)) +
geom_boxplot(outlier.shape = NA) +
facet_wrap(.~LIGATION_GROUP) +
ylab("Lenght") + xlab("") +
theme(plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "white",
colour = "white",
size = 0.5, linetype = "solid"),
text=element_text(family="serif"),
strip.text = element_text(size=10),
strip.background = element_rect(fill = "white"),
axis.title = element_text(size=10),
axis.text  = element_text(size=7),
axis.ticks = element_line(size = 0.45),
axis.text.x = element_text(angle = 60,hjust = 1),
legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
legend.text = element_text(size=25),
legend.text.align = 0,
legend.key = element_rect(colour = "white", fill = "white"))
trainIndex <- createDataPartition(preg$BECOME_PREGNANT, p = .5,
list = FALSE,
times = 1)
Train <- preg[trainIndex,]
Test  <- preg[-trainIndex,]
preg <- read.csv("BTA-Patients-MAW.csv") %>% select(c("BECOME_PREGNANT","TUBELENGTH_R_DISTAL","PREGNANT_NUMERIC",
"TUBELENGTH_L_DISTAL","LIGATION_GROUP",
"AGE","RIGHT_TUBE_LENGTH","LEFT_TUBE_LENGTH",
"TUBELENGTH_R_PROX",
"TUBELENGTH_L_PROX","AV_TUBELENGTH_GP",
"R_DIAMETER_NUMERIC",
"L_DIAMETER_NUMERIC",
"R_FIBROSIS_NUMERIC",
"L_FIBROSIS_NUMERIC")) %>%
filter(AGE != "Yes") %>%  mutate(AGE = as.numeric(as.character(AGE)) )  %>%
filter(AGE > 10) %>%
na.omit() %>% mutate(LEFT_TUBE_LENGTH = as.numeric(as.character(LEFT_TUBE_LENGTH)) ) %>%
mutate(PCA_TUBE_LENGTH = -prcomp(data.frame(RIGHT_TUBE_LENGTH,LEFT_TUBE_LENGTH))$x[,1]) %>%
#  mutate(assymetry = (RIGHT_TUBE_LENGTH + LEFT_TUBE_LENGTH)/apply(data.frame(RIGHT_TUBE_LENGTH,LEFT_TUBE_LENGTH), 1, max)) %>%
mutate(FTL = (RIGHT_TUBE_LENGTH + LEFT_TUBE_LENGTH)) %>%
mutate(DL = (R_DIAMETER_NUMERIC + R_FIBROSIS_NUMERIC)) %>%
mutate(FL = (L_FIBROSIS_NUMERIC + LEFT_TUBE_LENGTH)) %>%
filter(BECOME_PREGNANT %in% c("Yes","No")) %>% droplevels()
trainIndex <- createDataPartition(preg$BECOME_PREGNANT, p = .5,
list = FALSE,
times = 1)
Train <- preg[trainIndex,]
Test  <- preg[-trainIndex,]
fit0 <- gam(BECOME_PREGNANT~s(AGE,bs="cr",k=10)   + LIGATION_GROUP,data=preg,family = binomial(link="logit"))
preg <- read.csv("BTA-Patients-MAW.csv") %>% select(c("BECOME_PREGNANT","TUBELENGTH_R_DISTAL","PREGNANT_NUMERIC",
"TUBELENGTH_L_DISTAL","LIGATION_GROUP",
"AGE","RIGHT_TUBE_LENGTH","LEFT_TUBE_LENGTH",
"TUBELENGTH_R_PROX",
"TUBELENGTH_L_PROX","AV_TUBELENGTH_GP",
"R_DIAMETER_NUMERIC",
"L_DIAMETER_NUMERIC",
"R_FIBROSIS_NUMERIC",
"L_FIBROSIS_NUMERIC")) %>%
filter(AGE != "Yes") %>%  mutate(AGE = as.numeric(as.character(AGE)) )  %>%
filter(AGE > 10) %>%
na.omit() %>% mutate(LEFT_TUBE_LENGTH = as.numeric(as.character(LEFT_TUBE_LENGTH)) ) %>%
mutate(PCA_TUBE_LENGTH = -prcomp(data.frame(RIGHT_TUBE_LENGTH,LEFT_TUBE_LENGTH))$x[,1]) %>%
#  mutate(assymetry = (RIGHT_TUBE_LENGTH + LEFT_TUBE_LENGTH)/apply(data.frame(RIGHT_TUBE_LENGTH,LEFT_TUBE_LENGTH), 1, max)) %>%
mutate(TL = (RIGHT_TUBE_LENGTH + LEFT_TUBE_LENGTH)) %>%
mutate(DL = (R_DIAMETER_NUMERIC + R_FIBROSIS_NUMERIC)) %>%
mutate(FL = (L_FIBROSIS_NUMERIC + LEFT_TUBE_LENGTH)) %>%
filter(BECOME_PREGNANT %in% c("Yes","No")) %>% droplevels()
trainIndex <- createDataPartition(preg$BECOME_PREGNANT, p = .5,
list = FALSE,
times = 1)
Train <- preg[trainIndex,]
Test  <- preg[-trainIndex,]
# Case 0
fit0 <- gam(BECOME_PREGNANT~s(AGE,bs="cr",k=10)   + LIGATION_GROUP,data=preg,family = binomial(link="logit"))
fit <- gam(BECOME_PREGNANT~s(AGE,bs="cr",k=10)  + TL + DL + FL  + LIGATION_GROUP,data=preg,family= binomial(link="logit"))
visreg(fit,"assymetry",by="LIGATION_GROUP",cond = list(AGE = 25),
ylab = "Pregnancy probability", xlab="L + R",scale="response")
pred0 <- predict(fit0,newdata = Test[,-1],type="response")
pred1 <- predict(fit,newdata = Test[,-1],type="response")
plot(roc(Test$BECOME_PREGNANT, pred0, direction="<"),print.auc=TRUE,
lwd=3)
plot(roc(Test$BECOME_PREGNANT, pred1, direction="<"),print.auc=TRUE,
lwd=3)
<<<<<<< HEAD
rbinom(10,1,0.5)
dim(tubesum)
tubesum <- preg %>%  select(c("LIGATION_GROUP","TUBELENGTH_R_DISTAL",
"TUBELENGTH_L_DISTAL",
"RIGHT_TUBE_LENGTH","LEFT_TUBE_LENGTH",
"TUBELENGTH_R_PROX","TUBELENGTH_L_PROX",
"R_DIAMETER_NUMERIC",
"L_DIAMETER_NUMERIC",
"R_FIBROSIS_NUMERIC",
"L_FIBROSIS_NUMERIC"
)) %>%
melt(.,id.vars="LIGATION_GROUP") %>%
mutate(value=as.numeric(value))
# Pregnancy data
require(dplyr)
require(magrittr)
require(mgcv)
require(visreg)
library(FactoMineR)
require(caret)
library("factoextra")
library(pROC)
require(PRROC)
library(lime)
preg <- read.csv("BTA-Patients-MAW.csv") %>% select(c("BECOME_PREGNANT","TUBELENGTH_R_DISTAL","PREGNANT_NUMERIC",
"TUBELENGTH_L_DISTAL","LIGATION_GROUP",
"AGE","RIGHT_TUBE_LENGTH","LEFT_TUBE_LENGTH",
"TUBELENGTH_R_PROX",
"TUBELENGTH_L_PROX","AV_TUBELENGTH_GP",
"R_DIAMETER_NUMERIC",
"L_DIAMETER_NUMERIC",
"R_FIBROSIS_NUMERIC",
"L_FIBROSIS_NUMERIC")) %>%
filter(AGE != "Yes") %>%  mutate(AGE = as.numeric(as.character(AGE)) )  %>%
filter(AGE > 10) %>%
na.omit() %>% mutate(LEFT_TUBE_LENGTH = as.numeric(as.character(LEFT_TUBE_LENGTH)) ) %>%
mutate(PCA_TUBE_LENGTH = -prcomp(data.frame(RIGHT_TUBE_LENGTH,LEFT_TUBE_LENGTH))$x[,1]) %>%
#  mutate(assymetry = (RIGHT_TUBE_LENGTH + LEFT_TUBE_LENGTH)/apply(data.frame(RIGHT_TUBE_LENGTH,LEFT_TUBE_LENGTH), 1, max)) %>%
mutate(TL = (RIGHT_TUBE_LENGTH + LEFT_TUBE_LENGTH)) %>%
mutate(DL = (R_DIAMETER_NUMERIC + R_FIBROSIS_NUMERIC)) %>%
mutate(FL = (L_FIBROSIS_NUMERIC + LEFT_TUBE_LENGTH)) %>%
filter(BECOME_PREGNANT %in% c("Yes","No")) %>% droplevels()
tubesum <- preg %>%  select(c("LIGATION_GROUP","TUBELENGTH_R_DISTAL",
"TUBELENGTH_L_DISTAL",
"RIGHT_TUBE_LENGTH","LEFT_TUBE_LENGTH",
"TUBELENGTH_R_PROX","TUBELENGTH_L_PROX",
"R_DIAMETER_NUMERIC",
"L_DIAMETER_NUMERIC",
"R_FIBROSIS_NUMERIC",
"L_FIBROSIS_NUMERIC"
)) %>%
melt(.,id.vars="LIGATION_GROUP") %>%
mutate(value=as.numeric(value))
=======
>>>>>>> 8e4f02980a6738c372d7c86cb160540cb535eb68
setwd("~/Documents/GitHub/Medical_stat")
# Pregnancy data
require(dplyr)
require(magrittr)
require(mgcv)
require(visreg)
library(FactoMineR)
require(caret)
library("factoextra")
library(pROC)
require(PRROC)
library(lime)
<<<<<<< HEAD
preg <- read.csv("BTA-Patients-MAW.csv") %>% select(c("BECOME_PREGNANT","TUBELENGTH_R_DISTAL","PREGNANT_NUMERIC",
"TUBELENGTH_L_DISTAL","LIGATION_GROUP",
"AGE","RIGHT_TUBE_LENGTH","LEFT_TUBE_LENGTH",
"TUBELENGTH_R_PROX",
"TUBELENGTH_L_PROX","AV_TUBELENGTH_GP",
"R_DIAMETER_NUMERIC",
"L_DIAMETER_NUMERIC",
"R_FIBROSIS_NUMERIC",
"L_FIBROSIS_NUMERIC")) %>%
filter(AGE != "Yes") %>%  mutate(AGE = as.numeric(as.character(AGE)) )  %>%
filter(AGE > 10) %>%
na.omit() %>% mutate(LEFT_TUBE_LENGTH = as.numeric(as.character(LEFT_TUBE_LENGTH)) ) %>%
mutate(PCA_TUBE_LENGTH = -prcomp(data.frame(RIGHT_TUBE_LENGTH,LEFT_TUBE_LENGTH))$x[,1]) %>%
#  mutate(assymetry = (RIGHT_TUBE_LENGTH + LEFT_TUBE_LENGTH)/apply(data.frame(RIGHT_TUBE_LENGTH,LEFT_TUBE_LENGTH), 1, max)) %>%
mutate(TL = (RIGHT_TUBE_LENGTH + LEFT_TUBE_LENGTH)) %>%
mutate(DL = (R_DIAMETER_NUMERIC + R_FIBROSIS_NUMERIC)) %>%
mutate(FL = (L_FIBROSIS_NUMERIC + LEFT_TUBE_LENGTH)) %>%
filter(BECOME_PREGNANT %in% c("Yes","No")) %>% droplevels()
tubesum <- preg %>%  select(c("LIGATION_GROUP","TUBELENGTH_R_DISTAL",
"TUBELENGTH_L_DISTAL",
"RIGHT_TUBE_LENGTH","LEFT_TUBE_LENGTH",
"TUBELENGTH_R_PROX","TUBELENGTH_L_PROX",
"R_DIAMETER_NUMERIC",
"L_DIAMETER_NUMERIC",
"R_FIBROSIS_NUMERIC",
"L_FIBROSIS_NUMERIC"
)) %>%
melt(.,id.vars="LIGATION_GROUP") %>%
mutate(value=as.numeric(value))
require(reshape)
preg <- read.csv("BTA-Patients-MAW.csv") %>% select(c("BECOME_PREGNANT","TUBELENGTH_R_DISTAL","PREGNANT_NUMERIC",
"TUBELENGTH_L_DISTAL","LIGATION_GROUP",
"AGE","RIGHT_TUBE_LENGTH","LEFT_TUBE_LENGTH",
"TUBELENGTH_R_PROX",
"TUBELENGTH_L_PROX","AV_TUBELENGTH_GP",
"R_DIAMETER_NUMERIC",
"L_DIAMETER_NUMERIC",
"R_FIBROSIS_NUMERIC",
"L_FIBROSIS_NUMERIC")) %>%
filter(AGE != "Yes") %>%  mutate(AGE = as.numeric(as.character(AGE)) )  %>%
filter(AGE > 10) %>%
na.omit() %>% mutate(LEFT_TUBE_LENGTH = as.numeric(as.character(LEFT_TUBE_LENGTH)) ) %>%
mutate(PCA_TUBE_LENGTH = -prcomp(data.frame(RIGHT_TUBE_LENGTH,LEFT_TUBE_LENGTH))$x[,1]) %>%
#  mutate(assymetry = (RIGHT_TUBE_LENGTH + LEFT_TUBE_LENGTH)/apply(data.frame(RIGHT_TUBE_LENGTH,LEFT_TUBE_LENGTH), 1, max)) %>%
mutate(TL = (RIGHT_TUBE_LENGTH + LEFT_TUBE_LENGTH)) %>%
mutate(DL = (R_DIAMETER_NUMERIC + R_FIBROSIS_NUMERIC)) %>%
mutate(FL = (L_FIBROSIS_NUMERIC + LEFT_TUBE_LENGTH)) %>%
filter(BECOME_PREGNANT %in% c("Yes","No")) %>% droplevels()
tubesum <- preg %>%  select(c("LIGATION_GROUP","TUBELENGTH_R_DISTAL",
"TUBELENGTH_L_DISTAL",
"RIGHT_TUBE_LENGTH","LEFT_TUBE_LENGTH",
"TUBELENGTH_R_PROX","TUBELENGTH_L_PROX",
"R_DIAMETER_NUMERIC",
"L_DIAMETER_NUMERIC",
"R_FIBROSIS_NUMERIC",
"L_FIBROSIS_NUMERIC"
)) %>%
melt(.,id.vars="LIGATION_GROUP") %>%
mutate(value=as.numeric(value))
dim(tubesum)
rbinom(58560 ,1,0.5)
c(tubesum$LEFT_TUBE_LENGTH,tubesum$RIGHT_TUBE_LENGTH)
data.frame(tubesum$LEFT_TUBE_LENGTH,tubesum$RIGHT_TUBE_LENGTH)
tubesum
data.frame(preg $LEFT_TUBE_LENGTH,preg $RIGHT_TUBE_LENGTH)
data.frame(preg $LEFT_TUBE_LENGTH,preg $RIGHT_TUBE_LENGTH)[,rbinom(58560 ,1,0.5)]
TUBE_LENGTH <- data.frame(preg $LEFT_TUBE_LENGTH,preg$RIGHT_TUBE_LENGTH)[,1+rbinom(58560 ,1,0.5)]
TUBE_LENGTH
data.frame(preg$LEFT_TUBE_LENGTH,preg$RIGHT_TUBE_LENGTH)
for(i in 1:10){
TUBE_LENGTH[i] <- data.frame(preg$LEFT_TUBE_LENGTH,preg$RIGHT_TUBE_LENGTH)[i,1+rbinom(1,1,0.5)]
}
1+rbinom(1,1,0.5)
1+rbinom(1,1,0.5)
1+rbinom(1,1,0.5)
1+rbinom(1,1,0.5)
1+rbinom(1,1,0.5)
=======
require(reshape)
preg <- read.csv("BTA-Patients-MAW.csv")
preg$ANASTOMOSIS
preg$ANASTOMOSIS1_GROUP
preg$ANASTOMOSIS1_NUMERIC
table(preg$ANASTOMOSIS1_NUMERIC)
table(preg$ANASTOMOSIS2_NUMERIC)
preg <- read.csv("BTA-Patients-MAW.csv") %>% select(c("BECOME_PREGNANT",      "TUBELENGTH_R_DISTAL",
"PREGNANT_NUMERIC",     "LIGATION_GROUP",
"TUBELENGTH_L_DISTAL",  "AGE",
"LEFT_TUBE_LENGTH",     "RIGHT_TUBE_LENGTH",
"TUBELENGTH_L_PROX",    "TUBELENGTH_R_PROX",
"L_DIAMETER_NUMERIC",   "R_DIAMETER_NUMERIC",
"L_FIBROSIS_NUMERIC",   "R_FIBROSIS_NUMERIC",
"ANASTOMOSIS2_NUMERIC","ANASTOMOSIS1_NUMERIC"
)) %>%
filter(AGE != "Yes") %>%  mutate(AGE = as.numeric(as.character(AGE)) )  %>%
filter(AGE > 10) %>%
na.omit() %>% mutate(LEFT_TUBE_LENGTH = as.numeric(as.character(LEFT_TUBE_LENGTH)) ) %>%
filter(BECOME_PREGNANT %in% c("Yes","No")) %>% droplevels()
preg
300000/12
336000/12
df <- preg  %>% c("LEFT_TUBE_LENGTH",     "RIGHT_TUBE_LENGTH")
head(df)
preg <- read.csv("BTA-Patients-MAW.csv") %>% select(c("BECOME_PREGNANT",      "TUBELENGTH_R_DISTAL",
"PREGNANT_NUMERIC",     "LIGATION_GROUP",
"TUBELENGTH_L_DISTAL",  "AGE",
"LEFT_TUBE_LENGTH",     "RIGHT_TUBE_LENGTH",
"TUBELENGTH_L_PROX",    "TUBELENGTH_R_PROX",
"L_DIAMETER_NUMERIC",   "R_DIAMETER_NUMERIC",
"L_FIBROSIS_NUMERIC",   "R_FIBROSIS_NUMERIC",
"ANASTOMOSIS2_NUMERIC","ANASTOMOSIS1_NUMERIC"
)) %>%
filter(AGE != "Yes") %>%  mutate(AGE = as.numeric(as.character(AGE)) )  %>%
filter(AGE > 10) %>%
na.omit() %>% mutate(LEFT_TUBE_LENGTH = as.numeric(as.character(LEFT_TUBE_LENGTH)) ) %>%
filter(BECOME_PREGNANT %in% c("Yes","No")) %>% droplevels()
# Monte-Carlo Left and Right features
df <- preg  %>% c("LEFT_TUBE_LENGTH",     "RIGHT_TUBE_LENGTH")
df
preg
df <- preg  %>% select(c("LEFT_TUBE_LENGTH",     "RIGHT_TUBE_LENGTH"))
head(df)
df[1]
seq_len(nrow(df))
2:ncol(df))-1
df[-1]
df[,cbind(seq_len(nrow(df)), sample(2:ncol(df))-1)]
df[,sample(2:ncol(df))-1]
sample(2:ncol(df))-1
df[,1]
dfs <- df[1:10,]
dfs
fr <- function(x){
xr <- x[,1+rbinom(1,1,0.5)]
return(x)
}
fr(dfs[1,])
dfs[1,]
fr <- function(x){
xr <- x[,1+rbinom(1,1,0.5)]
return(xr)
}
fr(dfs[1,])
fr(dfs[1,])
fr(dfs[1,])
fr(dfs[1,])
fr(dfs[1,])
fr(dfs[1,])
fr(dfs[1,])
fr(dfs[1,])
apply(dfs,2,fr)
dfs
apply(dfs,2,fr)
apply(dfs,1,fr)
>>>>>>> 8e4f02980a6738c372d7c86cb160540cb535eb68
1+rbinom(1,1,0.5)
1+rbinom(1,1,0.5)
1+rbinom(1,1,0.5)
1+rbinom(1,1,0.5)
<<<<<<< HEAD
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
for(i in 1:2){
TUBE_LENGTH[i] <- data.frame(preg$LEFT_TUBE_LENGTH,preg$RIGHT_TUBE_LENGTH)[i,1+rbinom(1,1,0.5)]
}
TUBE_LENGTH
TUBE_LENGTH <- c()
for(i in 1:2){
TUBE_LENGTH[i] <- data.frame(preg$LEFT_TUBE_LENGTH,preg$RIGHT_TUBE_LENGTH)[i,1+rbinom(1,1,0.5)]
}
TUBE_LENGTH <- c()
for(i in 20){
TUBE_LENGTH[i] <- data.frame(preg$LEFT_TUBE_LENGTH,preg$RIGHT_TUBE_LENGTH)[i,1+rbinom(1,1,0.5)]
}
data.frame(preg$LEFT_TUBE_LENGTH,preg$RIGHT_TUBE_LENGTH)
TUBE_LENGTH
data.frame(preg$LEFT_TUBE_LENGTH,preg$RIGHT_TUBE_LENGTH)[i,1+rbinom(1,1,0.5)]
data.frame(preg$LEFT_TUBE_LENGTH,preg$RIGHT_TUBE_LENGTH)[i,1+rbinom(1,1,0.5)]
data.frame(preg$LEFT_TUBE_LENGTH,preg$RIGHT_TUBE_LENGTH)[i,1+rbinom(1,1,0.5)]
data.frame(preg$LEFT_TUBE_LENGTH,preg$RIGHT_TUBE_LENGTH)[i,1+rbinom(1,1,0.5)]
data.frame(preg$LEFT_TUBE_LENGTH,preg$RIGHT_TUBE_LENGTH)[i,1+rbinom(1,1,0.5)]
data.frame(preg$LEFT_TUBE_LENGTH,preg$RIGHT_TUBE_LENGTH)[i,1+rbinom(1,1,0.5)]
data.frame(preg$LEFT_TUBE_LENGTH,preg$RIGHT_TUBE_LENGTH)[i,1+rbinom(1,1,0.5)]
data.frame(preg$LEFT_TUBE_LENGTH,preg$RIGHT_TUBE_LENGTH)[i,1+rbinom(1,1,0.5)]
i
data.frame(preg$LEFT_TUBE_LENGTH,preg$RIGHT_TUBE_LENGTH)[1,1+rbinom(1,1,0.5)]
data.frame(preg$LEFT_TUBE_LENGTH,preg$RIGHT_TUBE_LENGTH)[2,1+rbinom(1,1,0.5)]
TUBE_LENGTH <- c()
for(i in 20){
TUBE_LENGTH[[i]] <- data.frame(preg$LEFT_TUBE_LENGTH,preg$RIGHT_TUBE_LENGTH)[i,1+rbinom(1,1,0.5)]
}
TUBE_LENGTH <- c()
for(i in 20){
TUBE_LENGTH[[i]] <- data.frame(preg$LEFT_TUBE_LENGTH,preg$RIGHT_TUBE_LENGTH)[i,1+rbinom(1,1,0.5)]
}
TUBE_LENGTH <- list()
for(i in 20){
TUBE_LENGTH[[i]] <- data.frame(preg$LEFT_TUBE_LENGTH,preg$RIGHT_TUBE_LENGTH)[i,1+rbinom(1,1,0.5)]
}
TUBE_LENGTH
TUBE_LENGTH <- list()
for(i in 20){
TUBE_LENGTH[i] <- data.frame(preg$LEFT_TUBE_LENGTH,preg$RIGHT_TUBE_LENGTH)[i,1+rbinom(1,1,0.5)]
}
TUBE_LENGTH
TUBE_LENGTH <- c()
for(i in 20){
TUBE_LENGTH <- append(TUBE_LENGTH,data.frame(preg$LEFT_TUBE_LENGTH,preg$RIGHT_TUBE_LENGTH)[i,1+rbinom(1,1,0.5)])
}
TUBE_LENGTH
TUBE_LENGTH <- c()
for(i in 20){
TUBE_LENGTH <- append(data.frame(preg$LEFT_TUBE_LENGTH,preg$RIGHT_TUBE_LENGTH)[i,1+rbinom(1,1,0.5)],TUBE_LENGTH,)
}
TUBE_LENGTH
TUBE_LENGTH
TUBE_LENGTH <- c()
for(i in 20){
TUBE_LENGTH <- append(data.frame(preg$LEFT_TUBE_LENGTH,preg$RIGHT_TUBE_LENGTH)[i,1+rbinom(1,1,0.5)],TUBE_LENGTH,)
}
TUBE_LENGTH <- data.frame(preg$LEFT_TUBE_LENGTH,preg$RIGHT_TUBE_LENGTH)
TUBE_LENGTH <- data.frame(preg$LEFT_TUBE_LENGTH,preg$RIGHT_TUBE_LENGTH)
for(i in 20){
TL <- append(TUBE_LENGTH[i,1+rbinom(1,1,0.5)],TL)
}
TUBE_LENGTH <- data.frame(preg$LEFT_TUBE_LENGTH,preg$RIGHT_TUBE_LENGTH)
TL <- c()
for(i in 20){
TL <- append(TUBE_LENGTH[i,1+rbinom(1,1,0.5)],TL)
}
TL
TUBE_LENGTH <- data.frame(preg$LEFT_TUBE_LENGTH,preg$RIGHT_TUBE_LENGTH)
TL <- c()
for(i in 20){
TL <- append(TL,TUBE_LENGTH[i,1+rbinom(1,1,0.5)])
}
TL
TUBE_LENGTH[i,1+rbinom(1,1,0.5)]
TUBE_LENGTH[i,1+rbinom(1,1,0.5)]
TUBE_LENGTH[i,1+rbinom(1,1,0.5)]
TUBE_LENGTH[i,1+rbinom(1,1,0.5)]
TUBE_LENGTH[i,1+rbinom(1,1,0.5)]
TUBE_LENGTH[i,1+rbinom(1,1,0.5)]
TUBE_LENGTH[i,1+rbinom(1,1,0.5)]
i
TUBE_LENGTH[i,1+rbinom(1,1,0.5)]
TUBE_LENGTH <- data.frame(preg$LEFT_TUBE_LENGTH,preg$RIGHT_TUBE_LENGTH)
TL <- c()
for(i in 1:5){
TL <- append(TL,TUBE_LENGTH[i,1+rbinom(1,1,0.5)])
}
TL
TUBE_LENGTH[1:5,]
TUBE_LENGTH <- data.frame(preg$LEFT_TUBE_LENGTH,preg$RIGHT_TUBE_LENGTH)
TL <- c()
for(i in 1:5){
TL <- append(TL,TUBE_LENGTH[i,1+rbinom(1,1,0.5)])
}
TUBE_LENGTH <- data.frame(preg$LEFT_TUBE_LENGTH,preg$RIGHT_TUBE_LENGTH)
TL <- c()
for(i in 1:5){
TL <- append(TL,TUBE_LENGTH[i,1+rbinom(1,1,0.5)])
}
TUBE_LENGTH <- data.frame(preg$LEFT_TUBE_LENGTH,preg$RIGHT_TUBE_LENGTH)
TL <- c()
for(i in 1:5){
TL <- append(TL,TUBE_LENGTH[i,1+rbinom(1,1,0.5)])
}
TUBE_LENGTH <- data.frame(preg$LEFT_TUBE_LENGTH,preg$RIGHT_TUBE_LENGTH)
TL <- c()
for(i in 1:5){
TL <- append(TL,TUBE_LENGTH[i,1+rbinom(1,1,0.5)])
}
TUBE_LENGTH <- data.frame(preg$LEFT_TUBE_LENGTH,preg$RIGHT_TUBE_LENGTH)
TL <- c()
for(i in 1:5){
TL <- append(TL,TUBE_LENGTH[i,1+rbinom(1,1,0.5)])
}
TUBE_LENGTH <- data.frame(preg$LEFT_TUBE_LENGTH,preg$RIGHT_TUBE_LENGTH)
TL <- c()
for(i in 1:5){
TL <- append(TL,TUBE_LENGTH[i,1+rbinom(1,1,0.5)])
}
TUBE_LENGTH <- data.frame(preg$LEFT_TUBE_LENGTH,preg$RIGHT_TUBE_LENGTH)
TL <- c()
for(i in 1:5){
TL <- append(TL,TUBE_LENGTH[i,1+rbinom(1,1,0.5)])
}
TUBE_LENGTH <- data.frame(preg$LEFT_TUBE_LENGTH,preg$RIGHT_TUBE_LENGTH)
TL <- c()
for(i in 1:5){
TL <- append(TL,TUBE_LENGTH[i,1+rbinom(1,1,0.5)])
}
TUBE_LENGTH <- data.frame(preg$LEFT_TUBE_LENGTH,preg$RIGHT_TUBE_LENGTH)
TL <- c()
for(i in 1:5){
TL <- append(TL,TUBE_LENGTH[i,1+rbinom(1,1,0.5)])
}
TUBE_LENGTH <- data.frame(preg$LEFT_TUBE_LENGTH,preg$RIGHT_TUBE_LENGTH)
TL <- c()
for(i in 1:5){
TL <- append(TL,TUBE_LENGTH[i,1+rbinom(1,1,0.5)])
}
TUBE_LENGTH <- data.frame(preg$LEFT_TUBE_LENGTH,preg$RIGHT_TUBE_LENGTH)
TL <- c()
for(i in 1:5){
TL <- append(TL,TUBE_LENGTH[i,1+rbinom(1,1,0.5)])
}
TUBE_LENGTH <- data.frame(preg$LEFT_TUBE_LENGTH,preg$RIGHT_TUBE_LENGTH)
TL <- c()
for(i in 1:5){
TL <- append(TL,TUBE_LENGTH[i,1+rbinom(1,1,0.5)])
}
TL
=======
fr(dfs[1,])
fr(dfs[1:3,])
fr(dfs[1:3,])
fr(dfs[1:3,])
fr(dfs[,])
fr(dfs)
crand(df)
crand <- function(x){
xr <- x[,1+rbinom(1,1,0.5)]
return(xr)
}
crand(df)
df <- preg  %>% select(c("LEFT_TUBE_LENGTH", "RIGHT_TUBE_LENGTH")) %>%
mutate(TL_rand = crand(df))
df
df <- preg  %>% select(c("LEFT_TUBE_LENGTH", "RIGHT_TUBE_LENGTH")) %>%
mutate(TL_rand = crand(df[,]))
df
crand(df[1:10,])
apply(dfs,1,crand)
apply(dfs[1,],1,crand)
dfs
dfs[,1+rbinom(1,1,0.5)]
dfs[1,1+rbinom(1,1,0.5)]
dfs[1,1+rbinom(1,1,0.5)]
dfs[1,1+rbinom(1,1,0.5)]
dfs[1,1+rbinom(1,1,0.5)]
dfs[1,1+rbinom(1,1,0.5)]
dfs[1,1+rbinom(1,1,0.5)]
dfs[1,1+rbinom(1,1,0.5)]
crand <- function(x){
xr <- x[1+rbinom(1,1,0.5)]
return(xr)
}
apply(dfs,1,crand)
df <- preg  %>% select(c("LEFT_TUBE_LENGTH", "RIGHT_TUBE_LENGTH")) %>%
mutate(TL_rand = apply(df,1,crand))
df
df$TL_rand == df$LEFT_TUBE_LENGTH
table(df$TL_rand == df$LEFT_TUBE_LENGTH)
df <- preg  %>% select(c("LEFT_TUBE_LENGTH", "RIGHT_TUBE_LENGTH")) %>%
mutate(TL_rand = apply(df,1,crand))
table(df$TL_rand == df$LEFT_TUBE_LENGTH)
df <- preg  %>% select(c("LEFT_TUBE_LENGTH", "RIGHT_TUBE_LENGTH")) %>%
mutate(TL_rand = apply(df,1,crand))
table(df$TL_rand == df$LEFT_TUBE_LENGTH)
df <- preg  %>% select(c("LEFT_TUBE_LENGTH", "RIGHT_TUBE_LENGTH")) %>%
mutate(TL_rand = apply(df,1,crand))
table(df$TL_rand == df$LEFT_TUBE_LENGTH)
df <- preg  %>% select(c("LEFT_TUBE_LENGTH", "RIGHT_TUBE_LENGTH")) %>%
mutate(TL_rand = apply(df,1,crand))
table(df$TL_rand == df$LEFT_TUBE_LENGTH)
df <- preg  %>% select(c("LEFT_TUBE_LENGTH", "RIGHT_TUBE_LENGTH")) %>%
mutate(TL_rand = apply(df,1,crand))
table(df$TL_rand == df$LEFT_TUBE_LENGTH)
df <- preg  %>% select(c("LEFT_TUBE_LENGTH", "RIGHT_TUBE_LENGTH")) %>%
mutate(TL_rand = apply(df,1,crand))
table(df$TL_rand == df$LEFT_TUBE_LENGTH)
df <- preg  %>% select(c("LEFT_TUBE_LENGTH", "RIGHT_TUBE_LENGTH")) %>%
mutate(TL_rand = apply(df,1,crand))
table(df$TL_rand == df$LEFT_TUBE_LENGTH)
df <- preg  %>% select(c("LEFT_TUBE_LENGTH", "RIGHT_TUBE_LENGTH")) %>%
mutate(TL_rand = apply(df,1,crand))
table(df$TL_rand == df$LEFT_TUBE_LENGTH)
df <- preg  %>% select(c("LEFT_TUBE_LENGTH", "RIGHT_TUBE_LENGTH")) %>%
mutate(TL_rand = apply(df,1,crand))
table(df$TL_rand == df$LEFT_TUBE_LENGTH)
df <- preg  %>% select(c("LEFT_TUBE_LENGTH", "RIGHT_TUBE_LENGTH")) %>%
mutate(TL_rand = apply(df,1,crand))
table(df$TL_rand == df$LEFT_TUBE_LENGTH)
df <- preg  %>% select(c("LEFT_TUBE_LENGTH", "RIGHT_TUBE_LENGTH")) %>%
mutate(TL_rand = apply(df,1,crand))
table(df$TL_rand == df$LEFT_TUBE_LENGTH)
df <- preg  %>% select(c("LEFT_TUBE_LENGTH", "RIGHT_TUBE_LENGTH")) %>%
mutate(TL_rand = apply(df,1,crand))
table(df$TL_rand == df$LEFT_TUBE_LENGTH)
df <- preg  %>% select(c("LEFT_TUBE_LENGTH", "RIGHT_TUBE_LENGTH")) %>%
mutate(TL_rand = apply(df,1,crand))
table(df$TL_rand == df$LEFT_TUBE_LENGTH)
df <- preg  %>% select(c("LEFT_TUBE_LENGTH", "RIGHT_TUBE_LENGTH")) %>%
mutate(TL_rand = apply(df,1,crand))
table(df$TL_rand == df$LEFT_TUBE_LENGTH)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(100,1,0.5)
table(rbinom(100,1,0.5))
table(rbinom(100,1,0.5))
table(rbinom(100,1,0.5))
table(rbinom(100,1,0.5))
table(rbinom(100,1,0.5)+1)
table(rbinom(100,1,0.5)+1)
table(rbinom(100,1,0.5)+1)
table(rbinom(100,1,0.5)+1)
table(rbinom(100,1,0.5)+1)
table(rbinom(100,1,0.5)+1)
table(rbinom(100,1,0.5)+1)
preg <- read.csv("BTA-Patients-MAW.csv") %>% select(c("BECOME_PREGNANT",      "TUBELENGTH_R_DISTAL",
"PREGNANT_NUMERIC",     "LIGATION_GROUP",
"TUBELENGTH_L_DISTAL",  "AGE",
"LEFT_TUBE_LENGTH",     "RIGHT_TUBE_LENGTH",
"TUBELENGTH_L_PROX",    "TUBELENGTH_R_PROX",
"L_DIAMETER_NUMERIC",   "R_DIAMETER_NUMERIC",
"L_FIBROSIS_NUMERIC",   "R_FIBROSIS_NUMERIC",
"ANASTOMOSIS2_NUMERIC","ANASTOMOSIS1_NUMERIC"
)) %>%
filter(AGE != "Yes") %>%  mutate(AGE = as.numeric(as.character(AGE)) )  %>%
filter(AGE > 10) %>%
na.omit() %>% mutate(LEFT_TUBE_LENGTH = as.numeric(as.character(LEFT_TUBE_LENGTH)) ) %>%
filter(BECOME_PREGNANT %in% c("Yes","No")) %>% droplevels()  %>%
mutate(TL_rand = apply(preg[,c("LEFT_TUBE_LENGTH","RIGHT_TUBE_LENGTH")],1,crand))
head(pref)
head(preg)
require(corplot)
require(corrplot)
install.packages("corrplot")
M<- preg[1:10,]
M
M[,1+rbinom(10,1,0.5)]
M <- preg[1:10,c("LEFT_TUBE_LENGTH","RIGHT_TUBE_LENGTH")]
M[,1+rbinom(10,1,0.5)]
preg[1:10,c("LEFT_TUBE_LENGTH","RIGHT_TUBE_LENGTH")]
M <- preg[1:10,c("LEFT_TUBE_LENGTH","RIGHT_TUBE_LENGTH")]
M[,1+rbinom(10,1,0.5)]
M
M[1:10,1+rbinom(10,1,0.5)]
1+rbinom(10,1,0.5)
crand <- function(x,seed){
if (!missing(seed))
set.seed(seed)
xr <- x[1+rbinom(1,1,0.5)]
return(xr)
}
preg <- read.csv("BTA-Patients-MAW.csv") %>% select(c("BECOME_PREGNANT",  "AGE",
"PREGNANT_NUMERIC",     "LIGATION_GROUP",
"TUBELENGTH_L_DISTAL",  "TUBELENGTH_R_DISTAL",
"LEFT_TUBE_LENGTH",     "RIGHT_TUBE_LENGTH",
"TUBELENGTH_L_PROX",    "TUBELENGTH_R_PROX",
"L_DIAMETER_NUMERIC",   "R_DIAMETER_NUMERIC",
"L_FIBROSIS_NUMERIC",   "R_FIBROSIS_NUMERIC",
"ANASTOMOSIS2_NUMERIC","ANASTOMOSIS1_NUMERIC"
)) %>%
filter(AGE != "Yes") %>%  mutate(AGE = as.numeric(as.character(AGE)) )  %>%
filter(AGE > 10) %>%
na.omit() %>% mutate(LEFT_TUBE_LENGTH = as.numeric(as.character(LEFT_TUBE_LENGTH)) ) %>%
filter(BECOME_PREGNANT %in% c("Yes","No")) %>% droplevels()  %>%
mutate(TL_rand = apply(preg[,c("LEFT_TUBE_LENGTH","RIGHT_TUBE_LENGTH")],1,crand,seed=42)) %>%
mutate(TLD_rand = apply(preg[,c( "TUBELENGTH_L_DISTAL",  "TUBELENGTH_R_DISTAL")],1,crand,seed=42)) %>%
mutate(TLP_rand = apply(preg[,c("TUBELENGTH_L_PROX", "TUBELENGTH_R_PROX")],1,crand,seed=42)) %>%
mutate(ANAS_rand = apply(preg[,c("ANASTOMOSIS2_NUMERIC","ANASTOMOSIS1_NUMERIC")],1,crand,seed=42)) %>%
mutate(Fibr_rand = apply(preg[,c("L_FIBROSIS_NUMERIC", "R_FIBROSIS_NUMERIC")],1,crand,seed=42))
preg
head(preg)
>>>>>>> 8e4f02980a6738c372d7c86cb160540cb535eb68
