ANAS_rand <- append(ANAS_rand,temp4[i,rlist[i]])
Fibr_rand <- append(Fibr_rand,temp5[i,rlist[i]])
}
preg2 <- preg %>%
mutate(TL_rand = TL_rand) %>%
mutate(TLD_rand = TLD_rand) %>%
mutate(TLP_rand = TLP_rand) %>%
mutate(ANAS_rand = ANAS_rand) %>%
mutate(Fibr_rand = Fibr_rand)
TL_rand <- c()
TLD_rand <- c()
TLP_rand <- c()
ANAS_rand <- c()
Fibr_rand <- c()
for (i in 1:nrow(preg)){
TL_rand <-  append(TL_rand,temp1[i,rlist[i]])
TLD_rand <- append(TLD_rand,temp2[i,rlist[i]])
TLP_rand <- append(TLP_rand,temp3[i,rlist[i]])
ANAS_rand <- append(ANAS_rand,temp4[i,rlist[i]])
Fibr_rand <- append(Fibr_rand,temp5[i,rlist[i]])
}
preg2 <- preg %>%
mutate(TL_rand = TL_rand) %>%
mutate(TLD_rand = TLD_rand) %>%
mutate(TLP_rand = TLP_rand) %>%
mutate(ANAS_rand = ANAS_rand) %>%
mutate(Fibr_rand = Fibr_rand)
preg2
head(preg2)
M <- preg2[,c("TL_rand","TLD_rand","TLP_rand","ANAS_rand","Fibr_rand")]
corrplot(M, type = "upper", order = "hclust",
col = brewer.pal(n = 8, name = "PuOr"))
M
preg2[,c("TL_rand","TLD_rand","TLP_rand","ANAS_rand","Fibr_rand")]
M <- preg2[,c("TL_rand","TLD_rand","TLP_rand","ANAS_rand","Fibr_rand")]
M
corrplot(M, type = "upper", order = "hclust",
col = brewer.pal(n = 8, name = "PuOr"))
corrplot(M, type = "upper", order = "hclust")
cor(M)
corrplot(M)
corrplot(as.matrix(M))
as.matrix(M)
corrplot(M)
dim(M)
head(M)
mode(M)
mode(M[,1])
mode(M[,2])
mode(M[,3])
mode(M[,4])
mode(M[,5])
corrplot(cor(M))
corrplot(cor(M),method="number",type="lower")
setwd("~/Documents/GitHub/Medical_stat")
# Pregnancy data
require(dplyr)
require(magrittr)
require(mgcv)
require(visreg)
library(FactoMineR)
require(caret)
library("factoextra")
library(pROC)
require(PRROC)
library(lime)
require(reshape)
require(corrplot)
# Auxiliar function to randomly select a given column
crand <- function(x,seed){
if (!missing(seed))
set.seed(seed)
xr <- x[1+rbinom(1,1,0.5)]
return(xr)
}
preg <- read.csv("BTA-Patients-MAW.csv") %>% select(c("BECOME_PREGNANT",  "AGE",
"PREGNANT_NUMERIC",     "LIGATION_GROUP",
"TUBELENGTH_L_DISTAL",  "TUBELENGTH_R_DISTAL",
"LEFT_TUBE_LENGTH",     "RIGHT_TUBE_LENGTH",
"TUBELENGTH_L_PROX",    "TUBELENGTH_R_PROX",
"L_DIAMETER_NUMERIC",   "R_DIAMETER_NUMERIC",
"L_FIBROSIS_NUMERIC",   "R_FIBROSIS_NUMERIC",
"ANASTOMOSIS2_NUMERIC","ANASTOMOSIS1_NUMERIC"
)) %>%
filter(AGE != "Yes") %>%  mutate(AGE = as.numeric(as.character(AGE)) )  %>%
filter(AGE > 10) %>%
na.omit() %>% mutate(LEFT_TUBE_LENGTH = as.numeric(as.character(LEFT_TUBE_LENGTH)) ) %>%
mutate(TUBELENGTH_L_DISTAL = as.numeric(as.character(TUBELENGTH_L_DISTAL)) ) %>%
filter(BECOME_PREGNANT %in% c("Yes","No")) %>% droplevels()
rlist <- rbinom(nrow(preg),1,0.5) + 1
temp1 <- preg[,c("LEFT_TUBE_LENGTH","RIGHT_TUBE_LENGTH")]
temp2 <- preg[,c( "TUBELENGTH_L_DISTAL",  "TUBELENGTH_R_DISTAL")]
temp3 <- preg[,c("TUBELENGTH_L_PROX", "TUBELENGTH_R_PROX")]
temp4 <- preg[,c("ANASTOMOSIS2_NUMERIC","ANASTOMOSIS1_NUMERIC")]
temp5 <- preg[,c("L_FIBROSIS_NUMERIC","R_FIBROSIS_NUMERIC")]
TL_rand <- c()
TLD_rand <- c()
TLP_rand <- c()
ANAS_rand <- c()
Fibr_rand <- c()
for (i in 1:nrow(preg)) {
TL_rand <-  append(TL_rand,temp1[i,rlist[i]])
TLD_rand <- append(TLD_rand,temp2[i,rlist[i]])
TLP_rand <- append(TLP_rand,temp3[i,rlist[i]])
ANAS_rand <- append(ANAS_rand,temp4[i,rlist[i]])
Fibr_rand <- append(Fibr_rand,temp5[i,rlist[i]])
}
preg2 <- preg %>%
mutate(TL_rand = TL_rand) %>%
mutate(TLD_rand = TLD_rand) %>%
mutate(TLP_rand = TLP_rand) %>%
mutate(ANAS_rand = ANAS_rand) %>%
mutate(Fibr_rand = Fibr_rand)
M <- preg2[,c("TL_rand","TLD_rand","TLP_rand","ANAS_rand","Fibr_rand")]
corrplot(cor(M),method="number",type="lower")
fit0 <- gam(BECOME_PREGNANT~s(AGE,bs="cr",k=10)   + LIGATION_GROUP,data=Train,family = binomial(link="logit"))
# Case 2 Age + Fallopian tube anatomy
fit <- gam(BECOME_PREGNANT~s(AGE,bs="cr",k=10)  + TL_rand + TLD_rand + TLP_rand  + ANAS_rand + Fibr_rand,data=Train,family= binomial(link="logit"))
pred0 <- predict(fit0,newdata = Test[,-1],type="response")
pred1 <- predict(fit,newdata = Test[,-1],type="response")
plot(roc(Test$BECOME_PREGNANT, pred0, direction="<"),print.auc=TRUE,
lwd=3)
plot(roc(Test$BECOME_PREGNANT, pred1, direction="<"),print.auc=TRUE,
lwd=3)
library(pROC)
require(PRROC)
install.packages("pROC")
install.packages("PRROC")
library(pROC)
require(PRROC)
plot(roc(Test$BECOME_PREGNANT, pred0, direction="<"),print.auc=TRUE,
lwd=3)
plot(roc(Test$BECOME_PREGNANT, pred1, direction="<"),print.auc=TRUE,
lwd=3)
trainIndex <- createDataPartition(preg$BECOME_PREGNANT, p = .5,
list = FALSE,
times = 1)
Train <- preg[trainIndex,]
Test  <- preg[-trainIndex,]
# Case 1 Age + ligation method
fit0 <- gam(BECOME_PREGNANT~s(AGE,bs="cr",k=10)   + LIGATION_GROUP,data=Train,family = binomial(link="logit"))
# Case 2 Age + Fallopian tube anatomy
fit <- gam(BECOME_PREGNANT~s(AGE,bs="cr",k=10)  + TL_rand + TLD_rand + TLP_rand  + ANAS_rand + Fibr_rand,data=Train,family= binomial(link="logit"))
pred0 <- predict(fit0,newdata = Test[,-1],type="response")
pred1 <- predict(fit,newdata = Test[,-1],type="response")
plot(roc(Test$BECOME_PREGNANT, pred0, direction="<"),print.auc=TRUE,
lwd=3)
plot(roc(Test$BECOME_PREGNANT, pred1, direction="<"),print.auc=TRUE,
lwd=3)
fit
fit <- gam(BECOME_PREGNANT~s(AGE,bs="cr",k=10)  + TL_rand + TLD_rand + TLP_rand  + ANAS_rand + Fibr_rand,data=Train,family= binomial(link="logit"))
Train <- preg2[trainIndex,]
Test  <- preg2[-trainIndex,]
# Case 1 Age + ligation method
fit0 <- gam(BECOME_PREGNANT~s(AGE,bs="cr",k=10)   + LIGATION_GROUP,data=Train,family = binomial(link="logit"))
# Case 2 Age + Fallopian tube anatomy
fit <- gam(BECOME_PREGNANT~s(AGE,bs="cr",k=10)  + TL_rand + TLD_rand + TLP_rand  + ANAS_rand + Fibr_rand,data=Train,family= binomial(link="logit"))
pred0 <- predict(fit0,newdata = Test[,-1],type="response")
pred1 <- predict(fit,newdata = Test[,-1],type="response")
plot(roc(Test$BECOME_PREGNANT, pred0, direction="<"),print.auc=TRUE,
lwd=3)
plot(roc(Test$BECOME_PREGNANT, pred1, direction="<"),print.auc=TRUE,
lwd=3)
require(randomForest)
tree_model <- randomForest(BECOME_PREGNANT~AGE+x2,TL_rand + TLD_rand + TLP_rand  + ANAS_rand + Fibr_rand,data=Train,ntree=1000)
tree_model <- randomForest(BECOME_PREGNANT~AGE+TL_rand + TLD_rand + TLP_rand  + ANAS_rand + Fibr_rand,data=Train,ntree=1000)
predRF <- predict(tree_model,newdata = Test[,-1])
predRF
pred1
predRF <- predict(tree_model,newdata = Test[,-1],type="prob")
predRF-pred1
pred1
predRF
predRF[,2-pred1
predRF[,2]-pred1
predRF[,2]-pred1
hist(predRF[,2]-pred1)
hist(predRF[,1]-pred1)
hist(predRF[,2]-pred1)
mean(hist(predRF[,2]-pred1))
mean(predRF[,2]-pred1)
sd(predRF[,2]-pred1)
plot(roc(Test$BECOME_PREGNANT, predRF[,2], direction="<"),print.auc=TRUE,
lwd=3)
tree_model <- randomForest(BECOME_PREGNANT~AGE+TL_rand + TLD_rand + TLP_rand  + ANAS_rand + Fibr_rand,data=Train,ntree=5000)
predRF <- predict(tree_model,newdata = Test[,-1],type="prob")
plot(roc(Test$BECOME_PREGNANT, predRF[,2], direction="<"),print.auc=TRUE,
lwd=3)
devtools::install_github("koalaverse/vip")
require(corrplot)
require(randomForest)
library(lime)       # ML local interpretation
library(vip)        # ML global interpretation
library(pdp)        # ML global interpretation
library(ggplot2)    # visualization pkg leveraged by above packages
library(caret)      # ML model building
library(h2o)        # ML model building
fit.caret <- train(
BECOME_PREGNANT~AGE+TL_rand + TLD_rand + TLP_rand  + ANAS_rand + Fibr_rand,
data = Trains,
method = 'ranger',
trControl = trainControl(method = "cv", number = 5, classProbs = TRUE),
tuneLength = 1,
importance = 'impurity'
)
fit.caret <- train(
BECOME_PREGNANT~AGE+TL_rand + TLD_rand + TLP_rand  + ANAS_rand + Fibr_rand,
data = Train,
method = 'ranger',
trControl = trainControl(method = "cv", number = 5, classProbs = TRUE),
tuneLength = 1,
importance = 'impurity'
)
vip(fit.ranger) + ggtitle("ranger: RF")
vip(fit.caret) + ggtitle("ranger: RF")
explainer_caret <- lime(Train, fit.caret, n_bins = 5)
class(explainer_caret)
library(lime)
install.packages("lime")
explainer_caret <- lime(Train, fit.caret, n_bins = 5)
class(explainer_caret)
require(lime)
explainer_caret <- lime(Train, fit.caret, n_bins = 5)
class(explainer_caret)
Train %>% filter(AGE <- 25)
Train
Train %>% filter(AGE <= 25)
local_obs <- Train %>% filter(AGE <= 25)
explanation_caret <- explain(
x = local_obs,
explainer = explainer_caret,
n_permutations = 5000,
dist_fun = "gower",
kernel_width = .75,
n_features = 10,
feature_select = "highest_weights",
labels = "Yes"
)
plot_features(explanation_caret)
local_obs <- Train %>% filter(AGE <= 20)
explanation_caret <- explain(
x = local_obs,
explainer = explainer_caret,
n_permutations = 5000,
dist_fun = "gower",
kernel_width = .75,
n_features = 10,
feature_select = "highest_weights",
labels = "Yes"
)
plot_features(explanation_caret)
local_obs <- Train %>% filter(AGE <= 22)
explanation_caret <- explain(
x = local_obs,
explainer = explainer_caret,
n_permutations = 5000,
dist_fun = "gower",
kernel_width = .75,
n_features = 10,
feature_select = "highest_weights",
labels = "Yes"
)
plot_features(explanation_caret)
Train %>% filter(AGE <= 23)
local_obs <- Train %>% filter(AGE <= 23)
explanation_caret <- explain(
x = local_obs,
explainer = explainer_caret,
n_permutations = 5000,
dist_fun = "gower",
kernel_width = .75,
n_features = 10,
feature_select = "highest_weights",
labels = "Yes"
)
plot_features(explanation_caret)
head(Train)
preg <- read.csv("BTA-Patients-MAW.csv") %>% select(c("BECOME_PREGNANT",  "AGE",
"LIGATION_GROUP",
"TUBELENGTH_L_DISTAL",  "TUBELENGTH_R_DISTAL",
"LEFT_TUBE_LENGTH",     "RIGHT_TUBE_LENGTH",
"TUBELENGTH_L_PROX",    "TUBELENGTH_R_PROX",
"L_DIAMETER_NUMERIC",   "R_DIAMETER_NUMERIC",
"L_FIBROSIS_NUMERIC",   "R_FIBROSIS_NUMERIC",
"ANASTOMOSIS2_NUMERIC","ANASTOMOSIS1_NUMERIC"
)) %>%
filter(AGE != "Yes") %>%  mutate(AGE = as.numeric(as.character(AGE)) )  %>%
filter(AGE > 10) %>%
na.omit() %>% mutate(LEFT_TUBE_LENGTH = as.numeric(as.character(LEFT_TUBE_LENGTH)) ) %>%
mutate(TUBELENGTH_L_DISTAL = as.numeric(as.character(TUBELENGTH_L_DISTAL)) ) %>%
filter(BECOME_PREGNANT %in% c("Yes","No")) %>% droplevels()
rlist <- rbinom(nrow(preg),1,0.5) + 1
temp1 <- preg[,c("LEFT_TUBE_LENGTH","RIGHT_TUBE_LENGTH")]
temp2 <- preg[,c( "TUBELENGTH_L_DISTAL",  "TUBELENGTH_R_DISTAL")]
temp3 <- preg[,c("TUBELENGTH_L_PROX", "TUBELENGTH_R_PROX")]
temp4 <- preg[,c("ANASTOMOSIS2_NUMERIC","ANASTOMOSIS1_NUMERIC")]
temp5 <- preg[,c("L_FIBROSIS_NUMERIC","R_FIBROSIS_NUMERIC")]
TL_rand <- c()
TLD_rand <- c()
TLP_rand <- c()
ANAS_rand <- c()
Fibr_rand <- c()
for (i in 1:nrow(preg)) {
TL_rand <-  append(TL_rand,temp1[i,rlist[i]])
TLD_rand <- append(TLD_rand,temp2[i,rlist[i]])
TLP_rand <- append(TLP_rand,temp3[i,rlist[i]])
ANAS_rand <- append(ANAS_rand,temp4[i,rlist[i]])
Fibr_rand <- append(Fibr_rand,temp5[i,rlist[i]])
}
preg2 <- preg %>%
mutate(TL_rand = TL_rand) %>%
mutate(TLD_rand = TLD_rand) %>%
mutate(TLP_rand = TLP_rand) %>%
mutate(ANAS_rand = ANAS_rand) %>%
mutate(Fibr_rand = Fibr_rand)
M <- preg2[,c("TL_rand","TLD_rand","TLP_rand","ANAS_rand","Fibr_rand")]
corrplot(cor(M),method="number",type="lower")
trainIndex <- createDataPartition(preg$BECOME_PREGNANT, p = .5,
list = FALSE,
times = 1)
Train <- preg2[trainIndex,]
Test  <- preg2[-trainIndex,]
fit.caret <- train(
BECOME_PREGNANT~AGE+TL_rand + TLD_rand + TLP_rand  + ANAS_rand + Fibr_rand,
data = Train,
method = 'ranger',
trControl = trainControl(method = "cv", number = 5, classProbs = TRUE),
tuneLength = 1,
importance = 'impurity'
)
vip(fit.caret) + ggtitle("ranger: RF")
explainer_caret <- lime(Train, fit.caret, n_bins = 5)
class(explainer_caret)
local_obs <- Train %>% filter(AGE <= 23)
explanation_caret <- explain(
x = local_obs,
explainer = explainer_caret,
n_permutations = 5000,
dist_fun = "gower",
kernel_width = .75,
n_features = 10,
feature_select = "highest_weights",
labels = "Yes"
)
plot_features(explanation_caret)
local_obs <- Train %>% select(c( "AGE",
"TUBELENGTH_L_DISTAL",  "TUBELENGTH_R_DISTAL",
"LEFT_TUBE_LENGTH",     "RIGHT_TUBE_LENGTH",
"TUBELENGTH_L_PROX",    "TUBELENGTH_R_PROX",
"L_DIAMETER_NUMERIC",   "R_DIAMETER_NUMERIC",
"L_FIBROSIS_NUMERIC",   "R_FIBROSIS_NUMERIC",
"ANASTOMOSIS2_NUMERIC","ANASTOMOSIS1_NUMERIC"
))  %>%  filter(AGE <= 23)
explanation_caret <- explain(
x = local_obs,
explainer = explainer_caret,
n_permutations = 5000,
dist_fun = "gower",
kernel_width = .75,
n_features = 10,
feature_select = "highest_weights",
labels = "Yes"
)
plot_features(explanation_caret)
Train %>% select(c( "AGE",
"TUBELENGTH_L_DISTAL",  "TUBELENGTH_R_DISTAL",
"LEFT_TUBE_LENGTH",     "RIGHT_TUBE_LENGTH",
"TUBELENGTH_L_PROX",    "TUBELENGTH_R_PROX",
"L_DIAMETER_NUMERIC",   "R_DIAMETER_NUMERIC",
"L_FIBROSIS_NUMERIC",   "R_FIBROSIS_NUMERIC",
"ANASTOMOSIS2_NUMERIC","ANASTOMOSIS1_NUMERIC"
))
Train %>% select(c( "AGE",
"TUBELENGTH_L_DISTAL",  "TUBELENGTH_R_DISTAL",
"LEFT_TUBE_LENGTH",     "RIGHT_TUBE_LENGTH",
"TUBELENGTH_L_PROX",    "TUBELENGTH_R_PROX",
"L_DIAMETER_NUMERIC",   "R_DIAMETER_NUMERIC",
"L_FIBROSIS_NUMERIC",   "R_FIBROSIS_NUMERIC",
"ANASTOMOSIS2_NUMERIC","ANASTOMOSIS1_NUMERIC"
))  %>%  filter(AGE <= 23)
local_obs <- Train %>% select(c( "AGE",
"TUBELENGTH_L_DISTAL",  "TUBELENGTH_R_DISTAL",
"LEFT_TUBE_LENGTH",     "RIGHT_TUBE_LENGTH",
"TUBELENGTH_L_PROX",    "TUBELENGTH_R_PROX",
"L_DIAMETER_NUMERIC",   "R_DIAMETER_NUMERIC",
"L_FIBROSIS_NUMERIC",   "R_FIBROSIS_NUMERIC",
"ANASTOMOSIS2_NUMERIC","ANASTOMOSIS1_NUMERIC"
))  %>%  filter(AGE <= 23)
explanation_caret <- explain(
x = local_obs,
explainer = explainer_caret,
n_permutations = 5000,
dist_fun = "gower",
kernel_width = .75,
n_features = 10,
feature_select = "highest_weights",
labels = "Yes"
)
global_obs <- Train %>% select(c( "AGE",
"TUBELENGTH_L_DISTAL",  "TUBELENGTH_R_DISTAL",
"LEFT_TUBE_LENGTH",     "RIGHT_TUBE_LENGTH",
"TUBELENGTH_L_PROX",    "TUBELENGTH_R_PROX",
"L_DIAMETER_NUMERIC",   "R_DIAMETER_NUMERIC",
"L_FIBROSIS_NUMERIC",   "R_FIBROSIS_NUMERIC",
"ANASTOMOSIS2_NUMERIC","ANASTOMOSIS1_NUMERIC"
))
explainer_caret <- lime(global_obs, fit.caret, n_bins = 5)
class(explainer_caret)
local_obs <- Train %>% select(c( "AGE",
"TUBELENGTH_L_DISTAL",  "TUBELENGTH_R_DISTAL",
"LEFT_TUBE_LENGTH",     "RIGHT_TUBE_LENGTH",
"TUBELENGTH_L_PROX",    "TUBELENGTH_R_PROX",
"L_DIAMETER_NUMERIC",   "R_DIAMETER_NUMERIC",
"L_FIBROSIS_NUMERIC",   "R_FIBROSIS_NUMERIC",
"ANASTOMOSIS2_NUMERIC","ANASTOMOSIS1_NUMERIC"
))  %>%  filter(AGE <= 23)
explanation_caret <- explain(
x = local_obs,
explainer = explainer_caret,
n_permutations = 5000,
dist_fun = "gower",
kernel_width = .75,
n_features = 10,
feature_select = "highest_weights",
labels = "Yes"
)
plot_features(explanation_caret)
global_obs <- Train %>% select(c( "AGE",
"TL_rand","TLD_rand","TLP_rand","ANAS_rand","Fibr_rand"
))
explainer_caret <- lime(global_obs, fit.caret, n_bins = 5)
class(explainer_caret)
local_obs <- Train %>% select(c( "AGE",
"TL_rand","TLD_rand","TLP_rand","ANAS_rand","Fibr_rand"
))  %>%  filter(AGE <= 23)
explanation_caret <- explain(
x = local_obs,
explainer = explainer_caret,
n_permutations = 5000,
dist_fun = "gower",
kernel_width = .75,
n_features = 10,
feature_select = "highest_weights",
labels = "Yes"
)
plot_features(explanation_caret)
local_obs <- Train %>% select(c( "AGE",
"TL_rand","TLD_rand","TLP_rand","ANAS_rand","Fibr_rand"
))  %>%  filter(AGE >= 35 & AGE <= 45)
local_obs
local_obs <- Train %>% select(c( "AGE",
"TL_rand","TLD_rand","TLP_rand","ANAS_rand","Fibr_rand"
))  %>%  filter(AGE >= 35 & AGE <= 40)
local_obs
local_obs <- Train %>% select(c( "AGE",
"TL_rand","TLD_rand","TLP_rand","ANAS_rand","Fibr_rand"
))  %>%  filter(AGE >= 40 & AGE <= 45)
local_obs
Train %>% select(c( "AGE",
"TL_rand","TLD_rand","TLP_rand","ANAS_rand","Fibr_rand"
))  %>%  filter(AGE >= 40 & AGE <= 42.5)
Train %>% select(c( "AGE",
"TL_rand","TLD_rand","TLP_rand","ANAS_rand","Fibr_rand"
))  %>%  filter(AGE >= 40 & AGE <= 41)
Train %>% select(c( "AGE",
"TL_rand","TLD_rand","TLP_rand","ANAS_rand","Fibr_rand"
))  %>%  filter(AGE == 40)
Train %>% select(c( "AGE",
"TL_rand","TLD_rand","TLP_rand","ANAS_rand","Fibr_rand"
))  %>%  filter(AGE == 45)
local_obs <- Train %>% select(c( "AGE",
"TL_rand","TLD_rand","TLP_rand","ANAS_rand","Fibr_rand"
))  %>%  filter(AGE == 45)
explanation_caret <- explain(
x = local_obs,
explainer = explainer_caret,
n_permutations = 5000,
dist_fun = "gower",
kernel_width = .75,
n_features = 10,
feature_select = "highest_weights",
labels = "Yes"
)
plot_features(explanation_caret)
local_obs <- Train %>% select(c( "AGE",
"TL_rand","TLD_rand","TLP_rand","ANAS_rand","Fibr_rand"
))  %>%  filter(AGE >= 50)
explanation_caret <- explain(
x = local_obs,
explainer = explainer_caret,
n_permutations = 5000,
dist_fun = "gower",
kernel_width = .75,
n_features = 10,
feature_select = "highest_weights",
labels = "Yes"
)
plot_features(explanation_caret)
local_obs <- Train %>% select(c( "AGE",
"TL_rand","TLD_rand","TLP_rand","ANAS_rand","Fibr_rand"
))  %>%  filter(AGE >= 47)
explanation_caret <- explain(
x = local_obs,
explainer = explainer_caret,
n_permutations = 5000,
dist_fun = "gower",
kernel_width = .75,
n_features = 10,
feature_select = "highest_weights",
labels = "Yes"
)
plot_features(explanation_caret)
